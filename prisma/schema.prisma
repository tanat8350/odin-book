// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id String @id
  sid String @unique
  data String
  expiresAt DateTime
}

model User {
  id Int @id @default(autoincrement())
  username String @unique @db.VarChar(255)
  password String @db.VarChar(255)
  displayName String @db.VarChar(255)
  bio String?
  profileImage String?
  private Boolean @default(false)
  following User[] @relation("follow")
  followedBy User[] @relation("follow")
  requested User[] @relation("request")
  requestPending User[] @relation("request")
  posts Post[] @relation("post")
  likes Post[]
  comments Comment[] @relation("comment")
}

model Post {
  id Int @id @default(autoincrement())
  message String
  timestamp DateTime @default(now())
  authorid Int
  author User @relation("post",fields: [authorid], references: [id])
  likes User[]
  comments Comment[]
}

model Comment {
  id Int @id @default(autoincrement())
  message String
  timestamp DateTime @default(now())
  authorid Int
  author User @relation("comment",fields: [authorid], references: [id])
  postid Int
  post Post @relation(fields: [postid], references: [id])
}


